DIGEST cd310e0b0ba32a1be1f6ebf92890cce6
FVerdi.VarD
R15:25 Verdi.Verdi <> <> lib
R44:51 Coq.FSets.FMapList <> <> lib
R69:74 Coq.Strings.String <> <> lib
R93:110 Verdi.FMapVeryWeak <> <> lib
R128:157 Verdi.StateMachineHandlerMonad <> <> lib
def 172:174 <> key
R179:184 Coq.Strings.String <> string ind
def 198:202 <> value
R207:212 Coq.Strings.String <> string ind
ind 226:230 <> input
constr 243:245 <> Put
constr 273:275 <> Get
constr 294:296 <> Del
constr 315:317 <> CAS
constr 361:363 <> CAD
R252:255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R261:264 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R265:269 Verdi.VarD <> input ind
R256:260 Verdi.VarD <> value def
R249:251 Verdi.VarD <> key def
R282:285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R286:290 Verdi.VarD <> input ind
R279:281 Verdi.VarD <> key def
R303:306 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R307:311 Verdi.VarD <> input ind
R300:302 Verdi.VarD <> key def
R324:327 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R340:343 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R349:352 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R353:357 Verdi.VarD <> input ind
R344:348 Verdi.VarD <> value def
R328:333 Coq.Init.Datatypes <> option ind
R335:339 Verdi.VarD <> value def
R321:323 Verdi.VarD <> key def
R370:373 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R379:382 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R383:387 Verdi.VarD <> input ind
R374:378 Verdi.VarD <> value def
R367:369 Verdi.VarD <> key def
ind 401:406 <> output
constr 419:426 <> Response
R433:436 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R449:452 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R465:468 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R469:474 Verdi.VarD <> output ind
R453:458 Coq.Init.Datatypes <> option ind
R460:464 Verdi.VarD <> value def
R437:442 Coq.Init.Datatypes <> option ind
R444:448 Verdi.VarD <> value def
R430:432 Verdi.VarD <> key def
R527:529 Verdi.FMapVeryWeak VWS <> mod
R577:582 Coq.Strings.String <> string ind
R632:633 Coq.Init.Logic <> eq ind
R635:640 Coq.Strings.String <> string ind
mod 508:518 <> VarDFunctor
def 656:665 VarDFunctor key_eq_dec
R670:679 Coq.Strings.String <> string_dec def
def 693:704 VarDFunctor value_eq_dec
R709:718 Coq.Strings.String <> string_dec def
def 733:742 VarDFunctor val_eq_dec
R760:765 Coq.Init.Datatypes <> option ind
R767:771 Verdi.VarD <> value def
R774:774 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R781:785 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R793:793 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R776:778 Coq.Init.Logic <> ::type_scope:x_'='_x not
R775:775 Verdi.VarD <> v var
R779:780 Verdi.VarD <> v' var
R787:790 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R786:786 Verdi.VarD <> v var
R791:792 Verdi.VarD <> v' var
R828:839 Verdi.VarD VarDFunctor value_eq_dec def
R828:839 Verdi.VarD VarDFunctor value_eq_dec def
prf 860:871 VarDFunctor input_eq_dec
R887:891 Verdi.VarD <> input ind
R894:894 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R900:904 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R911:911 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R896:898 Coq.Init.Logic <> ::type_scope:x_'='_x not
R895:895 Verdi.VarD <> x var
R899:899 Verdi.VarD <> y var
R906:909 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R905:905 Verdi.VarD <> x var
R910:910 Verdi.VarD <> y var
R953:962 Verdi.VarD VarDFunctor key_eq_dec def
R965:976 Verdi.VarD VarDFunctor value_eq_dec def
R979:988 Verdi.VarD VarDFunctor val_eq_dec def
R953:962 Verdi.VarD VarDFunctor key_eq_dec def
R953:962 Verdi.VarD VarDFunctor key_eq_dec def
R953:962 Verdi.VarD VarDFunctor key_eq_dec def
R953:962 Verdi.VarD VarDFunctor key_eq_dec def
R953:962 Verdi.VarD VarDFunctor key_eq_dec def
R953:962 Verdi.VarD VarDFunctor key_eq_dec def
R953:962 Verdi.VarD VarDFunctor key_eq_dec def
R953:962 Verdi.VarD VarDFunctor key_eq_dec def
R953:962 Verdi.VarD VarDFunctor key_eq_dec def
R965:976 Verdi.VarD VarDFunctor value_eq_dec def
R979:988 Verdi.VarD VarDFunctor val_eq_dec def
R965:976 Verdi.VarD VarDFunctor value_eq_dec def
R979:988 Verdi.VarD VarDFunctor val_eq_dec def
R965:976 Verdi.VarD VarDFunctor value_eq_dec def
R979:988 Verdi.VarD VarDFunctor val_eq_dec def
R965:976 Verdi.VarD VarDFunctor value_eq_dec def
R979:988 Verdi.VarD VarDFunctor val_eq_dec def
R965:976 Verdi.VarD VarDFunctor value_eq_dec def
R979:988 Verdi.VarD VarDFunctor val_eq_dec def
R965:976 Verdi.VarD VarDFunctor value_eq_dec def
R979:988 Verdi.VarD VarDFunctor val_eq_dec def
R965:976 Verdi.VarD VarDFunctor value_eq_dec def
R979:988 Verdi.VarD VarDFunctor val_eq_dec def
R965:976 Verdi.VarD VarDFunctor value_eq_dec def
R979:988 Verdi.VarD VarDFunctor val_eq_dec def
R965:976 Verdi.VarD VarDFunctor value_eq_dec def
R979:988 Verdi.VarD VarDFunctor val_eq_dec def
prf 1009:1021 VarDFunctor output_eq_dec
R1037:1042 Verdi.VarD <> output ind
R1045:1045 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1051:1055 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1062:1062 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1047:1049 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1046:1046 Verdi.VarD <> x var
R1050:1050 Verdi.VarD <> y var
R1057:1060 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R1056:1056 Verdi.VarD <> x var
R1061:1061 Verdi.VarD <> y var
R1104:1113 Verdi.VarD VarDFunctor key_eq_dec def
R1116:1127 Verdi.VarD VarDFunctor value_eq_dec def
R1130:1139 Verdi.VarD VarDFunctor val_eq_dec def
R1104:1113 Verdi.VarD VarDFunctor key_eq_dec def
R1104:1113 Verdi.VarD VarDFunctor key_eq_dec def
R1104:1113 Verdi.VarD VarDFunctor key_eq_dec def
R1116:1127 Verdi.VarD VarDFunctor value_eq_dec def
R1130:1139 Verdi.VarD VarDFunctor val_eq_dec def
R1116:1127 Verdi.VarD VarDFunctor value_eq_dec def
R1130:1139 Verdi.VarD VarDFunctor val_eq_dec def
R1116:1127 Verdi.VarD VarDFunctor value_eq_dec def
R1130:1139 Verdi.VarD VarDFunctor val_eq_dec def
def 1163:1166 VarDFunctor data
R1173:1177 Verdi.VarD Map t defax
R1179:1184 Coq.Strings.String <> string ind
def 1199:1205 VarDFunctor beq_key
R1216:1218 Verdi.VarD <> key def
R1229:1238 Coq.Strings.String <> string_dec def
R1243:1244 Verdi.VarD <> k2 var
R1240:1241 Verdi.VarD <> k1 var
R1261:1265 Coq.Init.Datatypes <> false constr
R1251:1254 Coq.Init.Datatypes <> true constr
def 1280:1283 VarDFunctor getk
R1289:1299 Verdi.StateMachineHandlerMonad <> GenHandler1 def
R1307:1312 Coq.Init.Datatypes <> option ind
R1314:1318 Verdi.VarD <> value def
R1301:1304 Verdi.VarD VarDFunctor data def
R1328:1331 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R1335:1340 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R1332:1334 Verdi.StateMachineHandlerMonad <> get def
R1341:1343 Verdi.StateMachineHandlerMonad <> ret def
R1346:1353 Verdi.VarD Map find defax
R1357:1358 Verdi.VarD <> db var
R1355:1355 Verdi.VarD <> k var
def 1374:1377 VarDFunctor setk
R1385:1395 Verdi.StateMachineHandlerMonad <> GenHandler1 def
R1402:1405 Coq.Init.Datatypes <> unit ind
R1397:1400 Verdi.VarD VarDFunctor data def
R1410:1415 Verdi.StateMachineHandlerMonad <> modify def
R1428:1434 Verdi.VarD Map add defax
R1440:1441 Verdi.VarD <> db var
R1438:1438 Verdi.VarD <> v var
R1436:1436 Verdi.VarD <> k var
def 1457:1460 VarDFunctor delk
R1466:1476 Verdi.StateMachineHandlerMonad <> GenHandler1 def
R1483:1486 Coq.Init.Datatypes <> unit ind
R1478:1481 Verdi.VarD VarDFunctor data def
R1491:1496 Verdi.StateMachineHandlerMonad <> modify def
R1509:1518 Verdi.VarD Map remove defax
R1522:1523 Verdi.VarD <> db var
R1520:1520 Verdi.VarD <> k var
def 1539:1542 VarDFunctor resp
R1554:1564 Verdi.StateMachineHandlerMonad <> GenHandler1 def
R1571:1576 Verdi.VarD <> output ind
R1566:1569 Verdi.VarD VarDFunctor data def
R1583:1594 Verdi.StateMachineHandlerMonad <> write_output def
R1597:1604 Verdi.VarD <> Response constr
R1610:1612 Verdi.VarD <> old var
R1608:1608 Verdi.VarD <> v var
R1606:1606 Verdi.VarD <> k var
def 1628:1639 VarDFunctor VarDHandler'
R1648:1652 Verdi.VarD <> input ind
R1657:1667 Verdi.StateMachineHandlerMonad <> GenHandler1 def
R1674:1679 Verdi.VarD <> output ind
R1669:1672 Verdi.VarD VarDFunctor data def
R1692:1694 Verdi.VarD <> inp var
R1707:1709 Verdi.VarD <> Get constr
R1717:1720 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R1727:1730 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R1721:1724 Verdi.VarD VarDFunctor getk def
R1731:1734 Verdi.VarD VarDFunctor resp def
R1740:1740 Verdi.VarD <> v var
R1738:1738 Verdi.VarD <> v var
R1748:1750 Verdi.VarD <> Put constr
R1762:1765 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R1772:1775 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R1766:1769 Verdi.VarD VarDFunctor getk def
R1784:1787 Verdi.StateMachineHandlerMonad <> :::x_';;'_x not
R1776:1779 Verdi.VarD VarDFunctor setk def
R1788:1791 Verdi.VarD VarDFunctor resp def
R1804:1806 Verdi.VarD <> old var
R1796:1799 Coq.Init.Datatypes <> Some constr
R1814:1816 Verdi.VarD <> Del constr
R1826:1829 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R1836:1839 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R1830:1833 Verdi.VarD VarDFunctor getk def
R1846:1849 Verdi.StateMachineHandlerMonad <> :::x_';;'_x not
R1840:1843 Verdi.VarD VarDFunctor delk def
R1850:1853 Verdi.VarD VarDFunctor resp def
R1862:1864 Verdi.VarD <> old var
R1857:1860 Coq.Init.Datatypes <> None constr
R1872:1874 Verdi.VarD <> CAS constr
R1895:1898 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R1905:1918 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R1899:1902 Verdi.VarD VarDFunctor getk def
R1923:1932 Verdi.VarD VarDFunctor val_eq_dec def
R1934:1936 Verdi.VarD <> old var
R2021:2024 Verdi.VarD VarDFunctor resp def
R2032:2034 Verdi.VarD <> old var
R2028:2030 Verdi.VarD <> old var
R1968:1971 Verdi.StateMachineHandlerMonad <> :::x_';;'_x not
R1959:1962 Verdi.VarD VarDFunctor setk def
R1972:1975 Verdi.VarD VarDFunctor resp def
R1989:1991 Verdi.VarD <> old var
R1980:1983 Coq.Init.Datatypes <> Some constr
R2042:2044 Verdi.VarD <> CAD constr
R2062:2065 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R2072:2085 Verdi.StateMachineHandlerMonad <> :::x_'<-'_x_';;'_x not
R2066:2069 Verdi.VarD VarDFunctor getk def
R2090:2099 Verdi.VarD VarDFunctor val_eq_dec def
R2106:2109 Coq.Init.Datatypes <> Some constr
R2101:2103 Verdi.VarD <> old var
R2187:2190 Verdi.VarD VarDFunctor resp def
R2198:2200 Verdi.VarD <> old var
R2194:2196 Verdi.VarD <> old var
R2139:2142 Verdi.StateMachineHandlerMonad <> :::x_';;'_x not
R2133:2136 Verdi.VarD VarDFunctor delk def
R2143:2146 Verdi.VarD VarDFunctor resp def
R2155:2157 Verdi.VarD <> old var
R2150:2153 Coq.Init.Datatypes <> None constr
def 2221:2230 VarDFunctor runHandler
R2242:2245 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2246:2256 Verdi.StateMachineHandlerMonad <> GenHandler1 def
R2263:2268 Verdi.VarD <> output ind
R2258:2261 Verdi.VarD VarDFunctor data def
R2237:2241 Verdi.VarD <> input ind
R2289:2293 Verdi.VarD <> input ind
R2301:2304 Verdi.VarD VarDFunctor data def
R2315:2317 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R2309:2314 Verdi.VarD <> output ind
R2318:2321 Verdi.VarD VarDFunctor data def
R2328:2341 Verdi.StateMachineHandlerMonad <> runGenHandler1 def
R2346:2346 Verdi.VarD <> h var
R2348:2350 Verdi.VarD <> inp var
R2343:2343 Verdi.VarD <> d var
def 2366:2376 VarDFunctor VarDHandler
R2381:2390 Verdi.VarD VarDFunctor runHandler def
R2392:2403 Verdi.VarD VarDFunctor VarDHandler' def
def 2418:2425 VarDFunctor init_map
R2430:2438 Verdi.VarD Map empty defax
R2440:2445 Coq.Strings.String <> string ind
inst 2458:2473 VarDFunctor vard_base_params
R2477:2486 Verdi.Net <> BaseParams class
R2539:2544 Verdi.Net <> output meth
R2518:2522 Verdi.Net <> input meth
R2499:2502 Verdi.Net <> data meth
R2507:2510 Verdi.VarD VarDFunctor data def
R2527:2531 Verdi.VarD <> input ind
R2549:2554 Verdi.VarD <> output ind
inst 2571:2590 VarDFunctor vard_one_node_params
R2594:2606 Verdi.Net <> OneNodeParams class
R2644:2650 Verdi.Net <> handler meth
R2621:2624 Verdi.Net <> init meth
R2629:2636 Verdi.VarD VarDFunctor init_map def
R2655:2665 Verdi.VarD VarDFunctor VarDHandler def
def 2684:2692 VarDFunctor input_key
R2699:2703 Verdi.VarD <> input ind
R2708:2710 Verdi.VarD <> key def
R2723:2723 Verdi.VarD <> i var
R2736:2738 Verdi.VarD <> Get constr
R2753:2755 Verdi.VarD <> Put constr
R2772:2774 Verdi.VarD <> Del constr
R2789:2791 Verdi.VarD <> CAS constr
R2810:2812 Verdi.VarD <> CAD constr
def 2842:2848 VarDFunctor operate
R2856:2860 Verdi.VarD <> input ind
R2871:2876 Coq.Init.Datatypes <> option ind
R2878:2882 Verdi.VarD <> value def
R2896:2897 Verdi.VarD <> op var
R2910:2912 Verdi.VarD <> Get constr
R2919:2919 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2924:2925 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2930:2930 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2920:2923 Verdi.VarD <> curr var
R2926:2929 Verdi.VarD <> curr var
R2938:2940 Verdi.VarD <> Put constr
R2949:2949 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2956:2957 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2962:2962 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2950:2953 Coq.Init.Datatypes <> Some constr
R2958:2961 Verdi.VarD <> curr var
R2970:2972 Verdi.VarD <> Del constr
R2979:2979 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2984:2985 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2990:2990 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2980:2983 Coq.Init.Datatypes <> None constr
R2986:2989 Verdi.VarD <> curr var
R2998:3000 Verdi.VarD <> CAS constr
R3015:3024 Verdi.VarD VarDFunctor val_eq_dec def
R3026:3029 Verdi.VarD <> curr var
R3059:3059 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3064:3065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3070:3070 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3060:3063 Verdi.VarD <> curr var
R3066:3069 Verdi.VarD <> curr var
R3038:3038 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3046:3047 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3052:3052 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3039:3042 Coq.Init.Datatypes <> Some constr
R3048:3051 Verdi.VarD <> curr var
R3078:3080 Verdi.VarD <> CAD constr
R3092:3101 Verdi.VarD VarDFunctor val_eq_dec def
R3109:3112 Coq.Init.Datatypes <> Some constr
R3103:3106 Verdi.VarD <> curr var
R3140:3140 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3145:3146 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3151:3151 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3141:3144 Verdi.VarD <> curr var
R3147:3150 Verdi.VarD <> curr var
R3122:3122 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3127:3128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3133:3133 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3123:3126 Coq.Init.Datatypes <> None constr
R3129:3132 Verdi.VarD <> curr var
def 3170:3178 VarDFunctor interpret
R3185:3187 Verdi.VarD <> key def
R3197:3200 Coq.Init.Datatypes <> list ind
R3202:3206 Verdi.VarD <> input ind
R3217:3222 Coq.Init.Datatypes <> option ind
R3224:3228 Verdi.VarD <> value def
R3242:3244 Verdi.VarD <> ops var
R3257:3258 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R3263:3263 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3268:3269 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3274:3274 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3264:3267 Verdi.VarD <> init var
R3270:3273 Verdi.VarD <> init var
R3284:3287 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3302:3308 Verdi.VarD VarDFunctor operate def
R3314:3316 Coq.Init.Datatypes <> fst def
R3319:3327 Verdi.VarD <> interpret def
R3335:3338 Verdi.VarD <> init var
R3331:3333 Verdi.VarD <> ops var
R3329:3329 Verdi.VarD <> k var
def 3362:3376 VarDFunctor inputs_with_key
R3387:3390 Coq.Init.Datatypes <> list ind
R3398:3400 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R3393:3397 Verdi.VarD <> input ind
R3401:3406 Verdi.VarD <> output ind
R3415:3417 Verdi.VarD <> key def
R3422:3425 Coq.Init.Datatypes <> list ind
R3427:3431 Verdi.VarD <> input ind
R3438:3446 StructTact.FilterMap <> filterMap def
R3620:3624 Verdi.VarD <> trace var
R3462:3471 Verdi.VarD VarDFunctor key_eq_dec def
R3476:3484 Verdi.VarD VarDFunctor input_key def
R3487:3489 Coq.Init.Datatypes <> fst def
R3491:3492 Verdi.VarD <> ev var
R3473:3473 Verdi.VarD <> k var
R3602:3605 Coq.Init.Datatypes <> None constr
R3529:3532 Coq.Init.Datatypes <> Some constr
R3535:3537 Coq.Init.Datatypes <> fst def
R3539:3540 Verdi.VarD <> ev var
ind 3639:3651 VarDFunctor trace_correct
constr 3690:3694 VarDFunctor TCnil
constr 3717:3721 VarDFunctor TCApp
R3676:3679 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3655:3658 Coq.Init.Datatypes <> list ind
R3666:3668 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R3661:3665 Verdi.VarD <> input ind
R3669:3674 Verdi.VarD <> output ind
R3698:3710 Verdi.VarD <> trace_correct ind
R3712:3713 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R3756:3780 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3927:3951 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3952:3964 Verdi.VarD <> trace_correct ind
R3968:3971 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R3967:3967 Verdi.VarD <> t var
R3972:3972 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R4004:4004 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R3973:3973 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3975:3976 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4003:4003 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3974:3974 Verdi.VarD <> i var
R3977:3984 Verdi.VarD <> Response constr
R4002:4002 Verdi.VarD <> o var
R4000:4000 Verdi.VarD <> v var
R3987:3995 Verdi.VarD VarDFunctor input_key def
R3997:3997 Verdi.VarD <> i var
R3918:3920 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3781:3789 Verdi.VarD VarDFunctor interpret def
R3914:3917 Coq.Init.Datatypes <> None constr
R3838:3842 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3880:3880 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3837:3837 Verdi.VarD <> i var
R3843:3845 Coq.Lists.List <> rev def
R3848:3862 Verdi.VarD VarDFunctor inputs_with_key def
R3867:3875 Verdi.VarD VarDFunctor input_key def
R3877:3877 Verdi.VarD <> i var
R3864:3864 Verdi.VarD <> t var
R3792:3800 Verdi.VarD VarDFunctor input_key def
R3802:3802 Verdi.VarD <> i var
R3921:3921 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3923:3924 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3926:3926 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3922:3922 Verdi.VarD <> v var
R3925:3925 Verdi.VarD <> o var
R3741:3753 Verdi.VarD <> trace_correct ind
R3755:3755 Verdi.VarD <> t var
ind 4019:4032 VarDFunctor trace_correct'
constr 4079:4084 VarDFunctor TC'nil
constr 4122:4127 VarDFunctor TC'App
R4040:4043 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4065:4068 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4044:4047 Coq.Init.Datatypes <> list ind
R4055:4057 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4050:4054 Verdi.VarD <> input ind
R4058:4063 Verdi.VarD <> output ind
R4036:4039 Verdi.VarD VarDFunctor data def
R4099:4112 Verdi.VarD <> trace_correct' ind
R4117:4118 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R4114:4115 Verdi.VarD <> st var
R4169:4197 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4375:4403 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4404:4417 Verdi.VarD <> trace_correct' ind
R4424:4427 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R4423:4423 Verdi.VarD <> t var
R4428:4428 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R4460:4460 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R4429:4429 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4431:4432 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4459:4459 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4430:4430 Verdi.VarD <> i var
R4433:4440 Verdi.VarD <> Response constr
R4458:4458 Verdi.VarD <> o var
R4456:4456 Verdi.VarD <> v var
R4443:4451 Verdi.VarD VarDFunctor input_key def
R4453:4453 Verdi.VarD <> i var
R4419:4420 Verdi.VarD <> st var
R4366:4368 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4198:4206 Verdi.VarD VarDFunctor interpret def
R4340:4347 Verdi.VarD Map find defax
R4363:4364 Verdi.VarD <> st var
R4350:4358 Verdi.VarD VarDFunctor input_key def
R4360:4360 Verdi.VarD <> i var
R4259:4263 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4301:4301 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4258:4258 Verdi.VarD <> i var
R4264:4266 Coq.Lists.List <> rev def
R4269:4283 Verdi.VarD VarDFunctor inputs_with_key def
R4288:4296 Verdi.VarD VarDFunctor input_key def
R4298:4298 Verdi.VarD <> i var
R4285:4285 Verdi.VarD <> t var
R4209:4217 Verdi.VarD VarDFunctor input_key def
R4219:4219 Verdi.VarD <> i var
R4369:4369 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4371:4372 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4374:4374 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4370:4370 Verdi.VarD <> v var
R4373:4373 Verdi.VarD <> o var
R4150:4163 Verdi.VarD <> trace_correct' ind
R4168:4168 Verdi.VarD <> t var
R4165:4166 Verdi.VarD <> st var
prf 4471:4498 VarDFunctor trace_correct'_trace_correct
R4547:4554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4555:4567 Verdi.VarD VarDFunctor trace_correct ind
R4569:4573 Verdi.VarD <> trace var
R4522:4535 Verdi.VarD VarDFunctor trace_correct' ind
R4542:4546 Verdi.VarD <> trace var
R4537:4540 Verdi.Net <> init meth
R4604:4607 Verdi.Net <> init meth
R4604:4607 Verdi.Net <> init meth
R4696:4706 Verdi.VarD Map empty_o defax
def 4732:4750 VarDFunctor trace_state_correct
R4761:4764 Coq.Init.Datatypes <> list ind
R4772:4774 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4767:4771 Verdi.VarD <> input ind
R4775:4780 Verdi.VarD <> output ind
R4790:4793 Verdi.VarD VarDFunctor data def
R4803:4806 Verdi.VarD VarDFunctor data def
R4893:4895 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4828:4830 Coq.Init.Datatypes <> fst def
R4833:4841 Verdi.VarD VarDFunctor interpret def
R4878:4885 Verdi.VarD Map find defax
R4889:4890 Verdi.VarD <> st var
R4887:4887 Verdi.VarD <> k var
R4846:4848 Coq.Lists.List <> rev def
R4851:4865 Verdi.VarD VarDFunctor inputs_with_key def
R4873:4873 Verdi.VarD <> k var
R4867:4871 Verdi.VarD <> trace var
R4843:4843 Verdi.VarD <> k var
R4896:4903 Verdi.VarD Map find defax
R4907:4909 Verdi.VarD <> st' var
R4905:4905 Verdi.VarD <> k var
R4942:4951 Verdi.VarD VarDFunctor runHandler def
R4956:4959 Verdi.VarD VarDFunctor getk def
R4964:4967 Verdi.VarD VarDFunctor setk def
R4972:4975 Verdi.VarD VarDFunctor delk def
R4980:4983 Verdi.VarD VarDFunctor resp def
prf 5012:5028 VarDFunctor trace_well_formed
R5083:5091 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5141:5141 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5102:5105 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5097:5099 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5092:5096 Verdi.VarD <> trace var
R5100:5101 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R5106:5112 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5118:5119 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5125:5127 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5120:5124 Verdi.VarD <> trace var
R5129:5132 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5128:5128 Verdi.VarD <> t var
R5133:5133 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5140:5140 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5134:5134 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5136:5137 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5139:5139 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5135:5135 Verdi.VarD <> i var
R5138:5138 Verdi.VarD <> o var
R5059:5069 Verdi.Net <> step_1_star def
R5078:5082 Verdi.VarD <> trace var
R5074:5076 Verdi.VarD <> st' var
R5071:5072 Verdi.VarD <> st var
R5182:5203 Verdi.Net <> refl_trans_1n_n1_trace thm
R5265:5275 Verdi.VarD VarDFunctor VarDHandler def
R5278:5289 Verdi.VarD VarDFunctor VarDHandler' def
prf 5404:5427 VarDFunctor inputs_with_key_plus_key
R5468:5475 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5509:5515 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5476:5490 Verdi.VarD VarDFunctor inputs_with_key def
R5508:5508 Verdi.VarD <> k var
R5494:5497 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5493:5493 Verdi.VarD <> l var
R5498:5498 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5505:5505 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5499:5499 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5501:5502 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5504:5504 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5500:5500 Verdi.VarD <> i var
R5503:5503 Verdi.VarD <> o var
R5516:5516 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5536:5540 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5517:5531 Verdi.VarD VarDFunctor inputs_with_key def
R5535:5535 Verdi.VarD <> k var
R5533:5533 Verdi.VarD <> l var
R5541:5541 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5543:5543 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5542:5542 Verdi.VarD <> i var
R5464:5466 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5453:5461 Verdi.VarD VarDFunctor input_key def
R5463:5463 Verdi.VarD <> i var
R5467:5467 Verdi.VarD <> k var
R5599:5613 Verdi.VarD VarDFunctor inputs_with_key def
R5675:5689 Verdi.VarD VarDFunctor inputs_with_key def
prf 5777:5804 VarDFunctor inputs_with_key_plus_not_key
R5846:5853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5887:5894 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5914:5914 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5854:5868 Verdi.VarD VarDFunctor inputs_with_key def
R5886:5886 Verdi.VarD <> k var
R5872:5875 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5871:5871 Verdi.VarD <> l var
R5876:5876 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5883:5883 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5877:5877 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5879:5880 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5882:5882 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5878:5878 Verdi.VarD <> i var
R5881:5881 Verdi.VarD <> o var
R5895:5909 Verdi.VarD VarDFunctor inputs_with_key def
R5913:5913 Verdi.VarD <> k var
R5911:5911 Verdi.VarD <> l var
R5841:5844 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R5830:5838 Verdi.VarD VarDFunctor input_key def
R5840:5840 Verdi.VarD <> i var
R5845:5845 Verdi.VarD <> k var
R5970:5984 Verdi.VarD VarDFunctor inputs_with_key def
R6046:6060 Verdi.VarD VarDFunctor inputs_with_key def
prf 6206:6236 VarDFunctor step_1_star_trace_state_correct
R6291:6298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6299:6317 Verdi.VarD VarDFunctor trace_state_correct def
R6328:6330 Verdi.VarD <> st' var
R6325:6326 Verdi.VarD <> st var
R6319:6323 Verdi.VarD <> trace var
R6267:6277 Verdi.Net <> step_1_star def
R6286:6290 Verdi.VarD <> trace var
R6282:6284 Verdi.VarD <> st' var
R6279:6280 Verdi.VarD <> st var
R6371:6392 Verdi.Net <> refl_trans_1n_n1_trace thm
R6427:6445 Verdi.VarD VarDFunctor trace_state_correct def
R6465:6483 Verdi.VarD VarDFunctor trace_state_correct def
R6520:6530 Verdi.VarD VarDFunctor VarDHandler def
R6533:6544 Verdi.VarD VarDFunctor VarDHandler' def
R6640:6649 Verdi.VarD VarDFunctor key_eq_dec def
R6640:6649 Verdi.VarD VarDFunctor key_eq_dec def
R6674:6697 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R6674:6697 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R6674:6697 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R6674:6697 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R6734:6741 Coq.Lists.List <> rev_unit thm
R6734:6741 Coq.Lists.List <> rev_unit thm
R6734:6741 Coq.Lists.List <> rev_unit thm
R6795:6806 Verdi.VarD Map add_eq_o defax
R6795:6806 Verdi.VarD Map add_eq_o defax
R6846:6873 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R6846:6873 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R6846:6873 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R6846:6873 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R6911:6923 Verdi.VarD Map add_neq_o defax
R6911:6923 Verdi.VarD Map add_neq_o defax
R6911:6923 Verdi.VarD Map add_neq_o defax
R6911:6923 Verdi.VarD Map add_neq_o defax
R6948:6957 Verdi.VarD VarDFunctor key_eq_dec def
R6948:6957 Verdi.VarD VarDFunctor key_eq_dec def
R6982:7005 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R6982:7005 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R6982:7005 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R6982:7005 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7042:7049 Coq.Lists.List <> rev_unit thm
R7042:7049 Coq.Lists.List <> rev_unit thm
R7042:7049 Coq.Lists.List <> rev_unit thm
R7102:7129 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7102:7129 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7102:7129 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7102:7129 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7167:7176 Verdi.VarD VarDFunctor key_eq_dec def
R7167:7176 Verdi.VarD VarDFunctor key_eq_dec def
R7201:7224 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7201:7224 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7201:7224 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7201:7224 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7261:7268 Coq.Lists.List <> rev_unit thm
R7261:7268 Coq.Lists.List <> rev_unit thm
R7261:7268 Coq.Lists.List <> rev_unit thm
R7321:7335 Verdi.VarD Map remove_eq_o defax
R7321:7335 Verdi.VarD Map remove_eq_o defax
R7321:7335 Verdi.VarD Map remove_eq_o defax
R7321:7335 Verdi.VarD Map remove_eq_o defax
R7360:7387 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7360:7387 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7360:7387 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7360:7387 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7425:7440 Verdi.VarD Map remove_neq_o defax
R7425:7440 Verdi.VarD Map remove_neq_o defax
R7425:7440 Verdi.VarD Map remove_neq_o defax
R7425:7440 Verdi.VarD Map remove_neq_o defax
R7465:7474 Verdi.VarD VarDFunctor key_eq_dec def
R7465:7474 Verdi.VarD VarDFunctor key_eq_dec def
R7506:7529 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7506:7529 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7506:7529 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7506:7529 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7566:7573 Coq.Lists.List <> rev_unit thm
R7566:7573 Coq.Lists.List <> rev_unit thm
R7566:7573 Coq.Lists.List <> rev_unit thm
R7615:7626 Verdi.VarD Map add_eq_o defax
R7615:7626 Verdi.VarD Map add_eq_o defax
R7615:7626 Verdi.VarD Map add_eq_o defax
R7615:7626 Verdi.VarD Map add_eq_o defax
R7688:7715 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7688:7715 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7688:7715 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7688:7715 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R7753:7765 Verdi.VarD Map add_neq_o defax
R7753:7765 Verdi.VarD Map add_neq_o defax
R7753:7765 Verdi.VarD Map add_neq_o defax
R7753:7765 Verdi.VarD Map add_neq_o defax
R7790:7799 Verdi.VarD VarDFunctor key_eq_dec def
R7790:7799 Verdi.VarD VarDFunctor key_eq_dec def
R7824:7847 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7824:7847 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7824:7847 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7824:7847 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R7884:7891 Coq.Lists.List <> rev_unit thm
R7884:7891 Coq.Lists.List <> rev_unit thm
R7884:7891 Coq.Lists.List <> rev_unit thm
R8059:8086 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R8059:8086 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R8059:8086 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R8059:8086 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R8124:8133 Verdi.VarD VarDFunctor key_eq_dec def
R8124:8133 Verdi.VarD VarDFunctor key_eq_dec def
R8167:8190 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R8167:8190 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R8167:8190 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R8167:8190 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R8229:8236 Coq.Lists.List <> rev_unit thm
R8229:8236 Coq.Lists.List <> rev_unit thm
R8229:8236 Coq.Lists.List <> rev_unit thm
R8313:8327 Verdi.VarD Map remove_eq_o defax
R8313:8327 Verdi.VarD Map remove_eq_o defax
R8313:8327 Verdi.VarD Map remove_eq_o defax
R8313:8327 Verdi.VarD Map remove_eq_o defax
R8417:8420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8421:8425 Coq.Init.Logic <> False ind
R8417:8420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8421:8425 Coq.Init.Logic <> False ind
R8531:8558 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R8531:8558 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R8531:8558 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R8531:8558 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R8596:8611 Verdi.VarD Map remove_neq_o defax
R8596:8611 Verdi.VarD Map remove_neq_o defax
R8596:8611 Verdi.VarD Map remove_neq_o defax
R8596:8611 Verdi.VarD Map remove_neq_o defax
R8636:8645 Verdi.VarD VarDFunctor key_eq_dec def
R8636:8645 Verdi.VarD VarDFunctor key_eq_dec def
R8677:8700 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R8677:8700 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R8677:8700 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R8677:8700 Verdi.VarD VarDFunctor inputs_with_key_plus_key thm
R8737:8744 Coq.Lists.List <> rev_unit thm
R8737:8744 Coq.Lists.List <> rev_unit thm
R8737:8744 Coq.Lists.List <> rev_unit thm
R8869:8872 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8873:8877 Coq.Init.Logic <> False ind
R8869:8872 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8873:8877 Coq.Init.Logic <> False ind
R8965:8992 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R8965:8992 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R8965:8992 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
R8965:8992 Verdi.VarD VarDFunctor inputs_with_key_plus_not_key thm
prf 9026:9058 VarDFunctor trace_state_correct_trace_correct
R9128:9135 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9159:9166 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9184:9191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9192:9205 Verdi.VarD VarDFunctor trace_correct' ind
R9216:9219 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R9211:9215 Verdi.VarD <> trace var
R9220:9220 Verdi.VarD <> t var
R9207:9208 Verdi.VarD <> st var
R9167:9172 Verdi.Net <> step_1 ind
R9183:9183 Verdi.VarD <> t var
R9178:9181 Verdi.VarD <> st'' var
R9174:9176 Verdi.VarD <> st' var
R9136:9149 Verdi.VarD VarDFunctor trace_correct' ind
R9154:9158 Verdi.VarD <> trace var
R9151:9152 Verdi.VarD <> st var
R9096:9114 Verdi.VarD VarDFunctor trace_state_correct def
R9125:9127 Verdi.VarD <> st' var
R9122:9123 Verdi.VarD <> st var
R9116:9120 Verdi.VarD <> trace var
R9274:9284 Verdi.VarD VarDFunctor VarDHandler def
R9287:9298 Verdi.VarD VarDFunctor VarDHandler' def
R9475:9493 Verdi.VarD VarDFunctor trace_state_correct def
prf 9580:9605 VarDFunctor step_1_star_trace_correct'
R9660:9667 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9668:9681 Verdi.VarD VarDFunctor trace_correct' ind
R9686:9690 Verdi.VarD <> trace var
R9683:9684 Verdi.VarD <> st var
R9636:9646 Verdi.Net <> step_1_star def
R9655:9659 Verdi.VarD <> trace var
R9651:9653 Verdi.VarD <> st' var
R9648:9649 Verdi.VarD <> st var
R9731:9752 Verdi.Net <> refl_trans_1n_n1_trace thm
R9810:9831 Verdi.Net <> refl_trans_n1_1n_trace thm
R9857:9887 Verdi.VarD VarDFunctor step_1_star_trace_state_correct thm
R9907:9939 Verdi.VarD VarDFunctor trace_state_correct_trace_correct thm
R9907:9939 Verdi.VarD VarDFunctor trace_state_correct_trace_correct thm
prf 9963:9987 VarDFunctor step_1_star_trace_correct
R10039:10046 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10047:10059 Verdi.VarD VarDFunctor trace_correct ind
R10061:10065 Verdi.VarD <> trace var
R10014:10024 Verdi.Net <> step_1_star def
R10034:10038 Verdi.VarD <> trace var
R10031:10032 Verdi.VarD <> st var
R10026:10029 Verdi.Net <> init meth
R10106:10131 Verdi.VarD VarDFunctor step_1_star_trace_correct' thm
R10148:10175 Verdi.VarD VarDFunctor trace_correct'_trace_correct thm
R10148:10175 Verdi.VarD VarDFunctor trace_correct'_trace_correct thm
def 10217:10233 VarDFunctor trace_correct_eg0
R10239:10251 Verdi.VarD VarDFunctor trace_correct ind
R10253:10253 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R10317:10317 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R10254:10254 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10276:10277 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10316:10316 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10255:10257 Verdi.VarD <> Put constr
R10278:10285 Verdi.VarD <> Response constr
R10312:10315 Coq.Init.Datatypes <> None constr
R10296:10299 Coq.Init.Datatypes <> Some constr
R10340:10348 Coq.Lists.List <> app_nil_l thm
R10340:10348 Coq.Lists.List <> app_nil_l thm
R10340:10348 Coq.Lists.List <> app_nil_l thm
R10409:10419 Verdi.VarD VarDFunctor <> mod
R10445:10455 Verdi.VarD VarDFunctor <> modtype
R10457:10472 Verdi.FMapVeryWeak LogTimeStringMap <> modtype
mod 10430:10440 <> LogTimeVarD
R10501:10511 Verdi.VarD VarDFunctor <> modtype
R10513:10531 Verdi.FMapVeryWeak LinearTimeStringMap <> modtype
mod 10483:10496 <> LinearTimeVarD
R10551:10561 Verdi.VarD LogTimeVarD <> modtype
mod 10543:10546 <> VarD
